[{"/home/marcoshsc/Programs/ChessApp/front-end/src/index.tsx":"1","/home/marcoshsc/Programs/ChessApp/front-end/src/App.tsx":"2","/home/marcoshsc/Programs/ChessApp/front-end/src/components/MainPage/index.tsx":"3","/home/marcoshsc/Programs/ChessApp/front-end/src/components/AppBar/index.tsx":"4","/home/marcoshsc/Programs/ChessApp/front-end/src/components/PermanentDrawer/index.tsx":"5","/home/marcoshsc/Programs/ChessApp/front-end/src/components/AppBar/styles.ts":"6","/home/marcoshsc/Programs/ChessApp/front-end/src/components/PermanentDrawer/styles.ts":"7","/home/marcoshsc/Programs/ChessApp/front-end/src/components/UnstyledLink/index.tsx":"8","/home/marcoshsc/Programs/ChessApp/front-end/src/components/UnstyledLink/styles.ts":"9","/home/marcoshsc/Programs/ChessApp/front-end/src/components/PlayPage/index.tsx":"10","/home/marcoshsc/Programs/ChessApp/front-end/src/components/PlayPage/styles.ts":"11","/home/marcoshsc/Programs/ChessApp/front-end/src/components/Game/index.tsx":"12","/home/marcoshsc/Programs/ChessApp/front-end/src/components/Game/styles.ts":"13","/home/marcoshsc/Programs/ChessApp/front-end/src/components/Game/Timer/index.tsx":"14","/home/marcoshsc/Programs/ChessApp/front-end/src/components/LoginPage/index.tsx":"15","/home/marcoshsc/Programs/ChessApp/front-end/src/components/SignUpPage/index.tsx":"16","/home/marcoshsc/Programs/ChessApp/front-end/src/atoms/game.ts":"17","/home/marcoshsc/Programs/ChessApp/front-end/src/services/gameServices.ts":"18","/home/marcoshsc/Programs/ChessApp/front-end/src/components/ShowGames/index.tsx":"19","/home/marcoshsc/Programs/ChessApp/front-end/src/components/ShowGames/styles.ts":"20","/home/marcoshsc/Programs/ChessApp/front-end/src/components/GameReview/index.tsx":"21","/home/marcoshsc/Programs/ChessApp/front-end/src/components/Profile/index.tsx":"22","/home/marcoshsc/Programs/ChessApp/front-end/src/components/Profile/styles.ts":"23","/home/marcoshsc/Programs/ChessApp/front-end/src/components/FollowingPage/index.tsx":"24","/home/marcoshsc/Programs/ChessApp/front-end/src/services/userServices.ts":"25","/home/marcoshsc/Programs/ChessApp/front-end/src/components/GameReview/styles.ts":"26","/home/marcoshsc/Programs/ChessApp/front-end/src/components/FollowingPage/styles.ts":"27","/home/marcoshsc/Programs/ChessApp/front-end/src/components/SearchPage/index.tsx":"28","/home/marcoshsc/Programs/ChessApp/front-end/src/components/SearchPage/styles.ts":"29","/home/marcoshsc/Programs/ChessApp/front-end/src/atoms/user.ts":"30","/home/marcoshsc/Programs/ChessApp/front-end/src/util/dateUtils.ts":"31"},{"size":270,"mtime":1616427302872,"results":"32","hashOfConfig":"33"},{"size":885,"mtime":1616475358240,"results":"34","hashOfConfig":"33"},{"size":299,"mtime":1614537460266,"results":"35","hashOfConfig":"33"},{"size":1664,"mtime":1617902700189,"results":"36","hashOfConfig":"33"},{"size":4366,"mtime":1617902499695,"results":"37","hashOfConfig":"33"},{"size":1702,"mtime":1611328003224,"results":"38","hashOfConfig":"33"},{"size":658,"mtime":1611332948383,"results":"39","hashOfConfig":"33"},{"size":363,"mtime":1614539784140,"results":"40","hashOfConfig":"33"},{"size":234,"mtime":1611329377671,"results":"41","hashOfConfig":"33"},{"size":2883,"mtime":1617906041920,"results":"42","hashOfConfig":"33"},{"size":389,"mtime":1611332785069,"results":"43","hashOfConfig":"33"},{"size":5151,"mtime":1616475333765,"results":"44","hashOfConfig":"33"},{"size":248,"mtime":1611333634021,"results":"45","hashOfConfig":"33"},{"size":1007,"mtime":1615951455705,"results":"46","hashOfConfig":"33"},{"size":3783,"mtime":1617894411672,"results":"47","hashOfConfig":"33"},{"size":4524,"mtime":1617894461523,"results":"48","hashOfConfig":"33"},{"size":621,"mtime":1616442077589,"results":"49","hashOfConfig":"33"},{"size":2090,"mtime":1619033543332,"results":"50","hashOfConfig":"33"},{"size":6760,"mtime":1619013716258,"results":"51","hashOfConfig":"33"},{"size":520,"mtime":1616439639934,"results":"52","hashOfConfig":"33"},{"size":7864,"mtime":1617893204130,"results":"53","hashOfConfig":"33"},{"size":3952,"mtime":1617893366361,"results":"54","hashOfConfig":"33"},{"size":213,"mtime":1616467855907,"results":"55","hashOfConfig":"33"},{"size":2862,"mtime":1619014223702,"results":"56","hashOfConfig":"33"},{"size":3419,"mtime":1619033623046,"results":"57","hashOfConfig":"33"},{"size":389,"mtime":1616442960033,"results":"58","hashOfConfig":"33"},{"size":515,"mtime":1619014288668,"results":"59","hashOfConfig":"33"},{"size":1880,"mtime":1617905908943,"results":"60","hashOfConfig":"33"},{"size":397,"mtime":1617905827864,"results":"61","hashOfConfig":"33"},{"size":693,"mtime":1616475485682,"results":"62","hashOfConfig":"33"},{"size":325,"mtime":1616467728501,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"mscrdp",{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"66"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"79"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"66"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"79"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/marcoshsc/Programs/ChessApp/front-end/src/index.tsx",[],["137","138"],"/home/marcoshsc/Programs/ChessApp/front-end/src/App.tsx",["139","140"],"/home/marcoshsc/Programs/ChessApp/front-end/src/components/MainPage/index.tsx",["141"],"import { Box } from \"@material-ui/core\";\nimport PrimarySearchAppBar from \"../AppBar\";\nimport PermanentDrawerLeft from \"../PermanentDrawer\";\nimport React from 'react'\n\nexport default function MainPage() {\n\n  return (\n    <Box width=\"100%\" height=\"100%\">\n      <PermanentDrawerLeft/>\n    </Box>\n  )\n\n}","/home/marcoshsc/Programs/ChessApp/front-end/src/components/AppBar/index.tsx",[],["142","143"],"/home/marcoshsc/Programs/ChessApp/front-end/src/components/PermanentDrawer/index.tsx",["144","145"],"/home/marcoshsc/Programs/ChessApp/front-end/src/components/AppBar/styles.ts",[],["146","147"],"/home/marcoshsc/Programs/ChessApp/front-end/src/components/PermanentDrawer/styles.ts",[],["148","149"],"/home/marcoshsc/Programs/ChessApp/front-end/src/components/UnstyledLink/index.tsx",[],"/home/marcoshsc/Programs/ChessApp/front-end/src/components/UnstyledLink/styles.ts",[],"/home/marcoshsc/Programs/ChessApp/front-end/src/components/PlayPage/index.tsx",[],"/home/marcoshsc/Programs/ChessApp/front-end/src/components/PlayPage/styles.ts",[],["150","151"],"/home/marcoshsc/Programs/ChessApp/front-end/src/components/Game/index.tsx",["152","153","154","155","156","157","158"],"import { Box, Button, Typography } from \"@material-ui/core\";\nimport Chessboard from \"chessboardjsx\";\nimport { createRef, useCallback, useEffect, useRef, useState } from \"react\";\nimport { useHistory, useLocation, useParams } from \"react-router-dom\";\nimport { useStyles } from \"./styles\";\nimport React from \"react\";\nimport { Move, Square } from 'chess.js'\nimport Timer, { TimerFunctions } from \"./Timer\";\nimport io from 'socket.io-client'\nimport { useRecoilState } from \"recoil\";\nimport { authAtom } from \"../../atoms/user\";\nconst Chess = require('chess.js')\n\nexport default function Game() {\n\n  const classes = useStyles()\n  const params: any = useParams()\n\n  const { search } = useLocation()\n  const timerRef = useRef<TimerFunctions>()\n  const timer2Ref = useRef<TimerFunctions>()\n  const [game, setGame] = useState(new Chess())\n  const [history, setHistory] = useState<Move[]>([])\n  const [fen, setFen] = useState<string>('start')\n  const [width, setWidth] = useState(600)\n  const { id } = params\n  const [socket, setSocket] = useState<SocketIOClient.Socket>(io('http://localhost:3001/'))\n  const [finalMessage, setFinalMessage] = useState('')\n  const [auth, setAuth] = useRecoilState(authAtom)\n\n\n  // setTimeout(() => {\n  //   console.log('changing to 59')\n  //   setPlayer1Time(59)\n  // }, 10000)\n\n  const handleDrop = useCallback(function (sourceSquare: Square, targetSquare: Square) {\n    if(game.game_over())\n      return\n    // see if the move is legal\n    let move = game.move({\n      from: sourceSquare,\n      to: targetSquare,\n      promotion: \"q\" // always promote to a queen for example simplicity\n    });\n\n    // illegal move\n    if (move === null) return;\n    setFen(game.fen())\n    setHistory(game.history({verbose: true}))\n  }, [game])\n\n  useEffect(() => {\n    socket.emit('userData', {\n      token: auth?.jwt\n    })\n    socket.emit('joinGame', {\n      gameId: id\n    })\n    socket.on('gameover', (data: any) => {\n      if(data.reason === 'checkmate') {\n        const color = new URLSearchParams(search).get('color') as \"white\" | \"black\"\n        if(data.winner === color) {\n          setFinalMessage(\"You Won the game!\")\n        }\n        else {\n          setFinalMessage(\"Your opponent won the game!\")\n        }\n      }\n      else if(data.reason === 'draw') {\n        setFinalMessage(\"The game finished with a draw.\")\n      }\n      else if(data.reason === 'resign') {\n        const color = new URLSearchParams(search).get('color') as \"white\" | \"black\"\n        if(data.winner === color) {\n          setFinalMessage(\"You Won the game! Your opponent resigned.\")\n        }\n        else {\n          setFinalMessage(\"Your opponent won the game! You resigned.\")\n        }\n      }\n      else if(data.reason === 'timeout') {\n        const color = new URLSearchParams(search).get('color') as \"white\" | \"black\"\n        if(data.winner === color) {\n          setFinalMessage(\"You Won the game! Your opponent ran out of time.\")\n        }\n        else {\n          setFinalMessage(\"Your opponent won the game! You ran out of time.\")\n        }\n      }\n      timerRef.current?.stop()\n      timer2Ref.current?.stop()\n    })\n    socket.on('madeMove', (data: any) => {\n      handleDrop(data.de, data.para)\n      const timer1 = timerRef.current as TimerFunctions\n      const timer2 = timer2Ref.current as TimerFunctions\n      if(data.color === new URLSearchParams(search).get('color') as \"white\" | \"black\") {\n        timer1.stop()\n        timer1.changeValue(data.tempo)\n        timer2.start()\n      }\n      else {\n        const timer2 = timer2Ref.current as TimerFunctions\n        timer2.stop()\n        timer2.changeValue(data.tempo)\n        timer1.start()\n      }\n    })\n  }, [game, handleDrop, id, search, socket])\n\n  return (\n    <Box width='100%' className={classes.box}>\n      {finalMessage !== '' && \n        <Typography align=\"center\">\n          {finalMessage}\n        </Typography>\n      }\n      <Box width={width}>\n        <Typography>\n          Opponent\n        </Typography>\n        <Timer \n          startTime={Number.parseInt((new URLSearchParams(search).get('rithm') as string).split('+')[0])} \n          ref={timer2Ref}\n        />\n      </Box>\n      <Chessboard \n        orientation={new URLSearchParams(search).get('color') as \"white\" | \"black\"}\n        onDrop={({sourceSquare, targetSquare}) => {\n          if((game.history({verbose:true}).length % 2 === 0 && new URLSearchParams(search).get('color') === 'black') ||\n          (game.history({verbose:true}).length % 2 !== 0 && new URLSearchParams(search).get('color') === 'white'))\n            return\n          socket.emit('move', {\n            from: sourceSquare,\n            to: targetSquare\n          })\n        }}\n        position={fen} calcWidth={({screenWidth}) => {\n        setWidth(600)\n        return 600\n      }}/>\n      <Box width={width}>\n        <Typography>\n          You\n        </Typography>\n        <Timer \n          startTime={Number.parseInt((new URLSearchParams(search).get('rithm') as string).split('+')[0])} \n          ref={timerRef}\n        />\n        <Button onClick={() => {\n          socket.emit('resign')\n        }}>RESIGN</Button>\n      </Box>\n    </Box>\n  )\n\n}","/home/marcoshsc/Programs/ChessApp/front-end/src/components/Game/styles.ts",[],["159","160"],"/home/marcoshsc/Programs/ChessApp/front-end/src/components/Game/Timer/index.tsx",[],"/home/marcoshsc/Programs/ChessApp/front-end/src/components/LoginPage/index.tsx",["161","162"],"import React, { useState } from 'react'\nimport Avatar from '@material-ui/core/Avatar'\nimport Button from '@material-ui/core/Button'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport TextField from '@material-ui/core/TextField'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport Link from '@material-ui/core/Link'\nimport Grid from '@material-ui/core/Grid'\nimport Box from '@material-ui/core/Box'\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined'\nimport Typography from '@material-ui/core/Typography'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Container from '@material-ui/core/Container'\nimport { useRecoilState } from 'recoil'\nimport { authAtom } from '../../atoms/user'\nimport { login } from '../../services/userServices'\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        ChessApp By Marcos Henrique\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  )\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}))\n\nexport default function LoginPage() {\n  const classes = useStyles()\n\n  const [, setAuth] = useRecoilState(authAtom)\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [err, setErr] = useState(false)\n\n  const handleLogin = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault()\n    try {\n      const userInfo = await login(email, password)\n      setEmail('')\n      setPassword('')\n      setAuth(userInfo)\n    } catch (err) {\n      setErr(true)\n    }\n  }\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign in\n        </Typography>\n        <form className={classes.form} noValidate onSubmit={handleLogin}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"email\"\n            label=\"Email Address\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n            name=\"email\"\n            autoComplete=\"email\"\n            autoFocus\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"current-password\"\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Sign In\n          </Button>\n          <Grid container>\n            <Grid item>\n              <Link href=\"/signup\" variant=\"body2\">\n                {\"Don't have an account? Sign Up\"}\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n        {err && <Typography>Incorrect login!</Typography>}\n      </div>\n      <Box mt={8}>\n        <Copyright />\n      </Box>\n    </Container>\n  )\n}\n","/home/marcoshsc/Programs/ChessApp/front-end/src/components/SignUpPage/index.tsx",[],"/home/marcoshsc/Programs/ChessApp/front-end/src/atoms/game.ts",[],"/home/marcoshsc/Programs/ChessApp/front-end/src/services/gameServices.ts",[],"/home/marcoshsc/Programs/ChessApp/front-end/src/components/ShowGames/index.tsx",[],"/home/marcoshsc/Programs/ChessApp/front-end/src/components/ShowGames/styles.ts",[],"/home/marcoshsc/Programs/ChessApp/front-end/src/components/GameReview/index.tsx",["163","164"],"import { Box, Typography, Button } from '@material-ui/core'\nimport Chessboard from 'chessboardjsx'\nimport React, { useCallback, useEffect, useRef, useState } from 'react'\nimport { useHistory, useParams } from 'react-router-dom'\nimport { useRecoilState } from 'recoil'\nimport { authAtom, UserInfo } from '../../atoms/user'\nimport { PlayerGameWithMoves } from '../../atoms/game'\nimport { getGame } from '../../services/gameServices'\nimport Timer, { TimerFunctions } from '../Game/Timer'\nimport { useStyles } from './styles'\nimport { Move, Square } from 'chess.js'\nconst Chess = require('chess.js')\n\nexport default function GameReview() {\n  const classes = useStyles()\n  const { id } = useParams() as any\n  const [auth] = useRecoilState(authAtom)\n  const [dbGame, setDbGame] = useState<PlayerGameWithMoves>()\n  const [perspective, setPerspective] = useState<'white' | 'black'>('white')\n  const timerRef = useRef<TimerFunctions>()\n  const timer2Ref = useRef<TimerFunctions>()\n  const [game, setGame] = useState(new Chess())\n  const [history, setHistory] = useState<Move[]>([])\n  const [fen, setFen] = useState<string>('start')\n  const [width, setWidth] = useState(600)\n  const [sequencial, setSequencial] = useState(0)\n  const routerHistory = useHistory()\n\n  const concreteAuth = auth as UserInfo\n\n  useEffect(() => {\n    const getData = async () => {\n      const dbGame = await getGame(concreteAuth.jwt, id)\n      setDbGame(dbGame)\n    }\n    getData()\n  }, [concreteAuth.jwt, id])\n\n  useEffect(() => {\n    if (dbGame) {\n      const timer1 = timerRef.current as TimerFunctions\n      const timer2 = timer2Ref.current as TimerFunctions\n      timer1.changeValue(Number.parseInt(dbGame.game.rithm.split('+')[0]) * 60)\n      timer2.changeValue(Number.parseInt(dbGame.game.rithm.split('+')[0]) * 60)\n      setSequencial(0)\n      setFen('start')\n      setHistory([])\n    }\n  }, [dbGame])\n\n  const handleDrop = useCallback(\n    function (sourceSquare: Square, targetSquare: Square) {\n      if (game.game_over()) return\n      // see if the move is legal\n      let move = game.move({\n        from: sourceSquare,\n        to: targetSquare,\n        promotion: 'q', // always promote to a queen for example simplicity\n      })\n\n      // illegal move\n      if (move === null) {\n        console.log('move is null')\n        return\n      }\n      setFen(game.fen())\n      setHistory(game.history({ verbose: true }))\n    },\n    [game],\n  )\n\n  const handlePrevMove = () => {\n    const timer1 = timerRef.current as TimerFunctions\n    const timer2 = timer2Ref.current as TimerFunctions\n    if (!dbGame || sequencial === 0) return\n    if (sequencial === 1) {\n      return\n    } else {\n      game.undo()\n      game.undo()\n      const gameTime = Number.parseInt(dbGame.game.rithm.split('+')[0]) * 60\n      const move =\n        sequencial - 4 >= 0 ? dbGame.moves[sequencial - 4] : { time: gameTime }\n      const move2 =\n        sequencial - 3 >= 0 ? dbGame.moves[sequencial - 3] : { time: gameTime }\n      setFen(game.fen())\n      setHistory(game.history({ verbose: true }))\n      if (sequencial % 2 === 0) {\n        if (perspective === 'white') {\n          timer1.changeValue(move.time)\n          timer2.changeValue(move2.time)\n        } else {\n          timer2.changeValue(move.time)\n          timer1.changeValue(move2.time)\n        }\n      } else {\n        if (perspective === 'white') {\n          timer1.changeValue(move2.time)\n          timer2.changeValue(move.time)\n        } else {\n          timer2.changeValue(move2.time)\n          timer1.changeValue(move.time)\n        }\n      }\n      setSequencial(sequencial - 2)\n    }\n  }\n\n  const handleNextMove = () => {\n    if (!dbGame) return\n    if (sequencial === dbGame.moves.length) return\n    const move = dbGame.moves[sequencial]\n    handleDrop(move.from as Square, move.to as Square)\n    const timer1 = timerRef.current as TimerFunctions\n    const timer2 = timer2Ref.current as TimerFunctions\n    if (sequencial % 2 === 0) {\n      if (perspective === 'white') timer1.changeValue(move.time)\n      else timer2.changeValue(move.time)\n    } else {\n      if (perspective === 'white') timer2.changeValue(move.time)\n      else timer1.changeValue(move.time)\n    }\n    setSequencial(sequencial + 1)\n  }\n\n  const handleChangePerspective = () => {\n    if (!dbGame) return\n    const currentPerspective = perspective\n    setPerspective(perspective === 'white' ? 'black' : 'white')\n    const timer1 = timerRef.current as TimerFunctions\n    const timer2 = timer2Ref.current as TimerFunctions\n    const gameTime = Number.parseInt(dbGame.game.rithm.split('+')[0]) * 60\n    const move =\n      sequencial - 2 >= 0 ? dbGame.moves[sequencial - 2] : { time: gameTime }\n    const move2 =\n      sequencial - 1 >= 0 ? dbGame.moves[sequencial - 1] : { time: gameTime }\n    if (sequencial % 2 === 0) {\n      if (currentPerspective === 'white') {\n        timer1.changeValue(move2.time)\n        timer2.changeValue(move.time)\n      } else {\n        timer1.changeValue(move.time)\n        timer2.changeValue(move2.time)\n      }\n    } else {\n      if (currentPerspective === 'white') {\n        timer1.changeValue(move.time)\n        timer2.changeValue(move2.time)\n      } else {\n        timer1.changeValue(move2.time)\n        timer2.changeValue(move.time)\n      }\n    }\n  }\n\n  const handleGoToProfile = (userId: number) => {\n    return () => {\n      routerHistory.replace(`/profile/${userId}`)\n    }\n  }\n\n  return (\n    <Box width=\"100%\" className={classes.box}>\n      <div>\n        <Button style={{ padding: 10 }} onClick={handlePrevMove}>\n          Previous Move\n        </Button>\n        <Button style={{ padding: 10 }} onClick={handleNextMove}>\n          Next Move\n        </Button>\n        <Button style={{ padding: 10 }} onClick={handleChangePerspective}>\n          Change Perspective\n        </Button>\n      </div>\n      {dbGame && sequencial === dbGame.moves.length && (\n        <Typography align=\"center\">\n          {dbGame.game.reasonEnd === 'draw'\n            ? `The game ended in a draw.`\n            : `${dbGame.game.winner} wins by ${dbGame.game.reasonEnd}.`}\n        </Typography>\n      )}\n      <Box width={width}>\n        <Button\n          onClick={\n            dbGame\n              ? handleGoToProfile(\n                  perspective === 'black'\n                    ? dbGame.game.whitePlayer.id\n                    : dbGame.game.blackPlayer.id,\n                )\n              : () => {}\n          }\n        >\n          {`${\n            dbGame\n              ? perspective === 'black'\n                ? dbGame.game.whitePlayer.name\n                : dbGame.game.blackPlayer.name\n              : 'Loading Info...'\n          } (Click To See Profile)`}\n        </Button>\n        <Timer\n          startTime={\n            dbGame ? Number.parseInt(dbGame.game.rithm.split('+')[0]) * 60 : 0\n          }\n          ref={timer2Ref}\n        />\n      </Box>\n      <Chessboard\n        orientation={perspective}\n        onDrop={({ sourceSquare, targetSquare }) => {}}\n        position={fen}\n        calcWidth={({ screenWidth }) => {\n          setWidth(600)\n          return 600\n        }}\n      />\n      <Box width={width}>\n        <Button\n          onClick={\n            dbGame\n              ? handleGoToProfile(\n                  perspective === 'white'\n                    ? dbGame.game.whitePlayer.id\n                    : dbGame.game.blackPlayer.id,\n                )\n              : () => {}\n          }\n        >\n          {`${\n            dbGame\n              ? perspective === 'white'\n                ? dbGame.game.whitePlayer.name\n                : dbGame.game.blackPlayer.name\n              : 'Loading Info...'\n          } (Click To See Profile)`}\n        </Button>\n        <Timer\n          startTime={\n            dbGame ? Number.parseInt(dbGame.game.rithm.split('+')[0]) * 60 : 0\n          }\n          ref={timerRef}\n        />\n      </Box>\n    </Box>\n  )\n}\n","/home/marcoshsc/Programs/ChessApp/front-end/src/components/Profile/index.tsx",[],["165","166"],"/home/marcoshsc/Programs/ChessApp/front-end/src/components/Profile/styles.ts",[],"/home/marcoshsc/Programs/ChessApp/front-end/src/components/FollowingPage/index.tsx",["167"],"/home/marcoshsc/Programs/ChessApp/front-end/src/services/userServices.ts",[],"/home/marcoshsc/Programs/ChessApp/front-end/src/components/GameReview/styles.ts",[],"/home/marcoshsc/Programs/ChessApp/front-end/src/components/FollowingPage/styles.ts",[],"/home/marcoshsc/Programs/ChessApp/front-end/src/components/SearchPage/index.tsx",[],"/home/marcoshsc/Programs/ChessApp/front-end/src/components/SearchPage/styles.ts",[],"/home/marcoshsc/Programs/ChessApp/front-end/src/atoms/user.ts",[],"/home/marcoshsc/Programs/ChessApp/front-end/src/util/dateUtils.ts",[],{"ruleId":"168","replacedBy":"169"},{"ruleId":"170","replacedBy":"171"},{"ruleId":"172","severity":1,"message":"173","line":1,"column":8,"nodeType":"174","messageId":"175","endLine":1,"endColumn":18},{"ruleId":"172","severity":1,"message":"176","line":13,"column":16,"nodeType":"174","messageId":"175","endLine":13,"endColumn":23},{"ruleId":"172","severity":1,"message":"177","line":2,"column":8,"nodeType":"174","messageId":"175","endLine":2,"endColumn":27},{"ruleId":"168","replacedBy":"178"},{"ruleId":"170","replacedBy":"179"},{"ruleId":"172","severity":1,"message":"180","line":17,"column":10,"nodeType":"174","messageId":"175","endLine":17,"endColumn":14},{"ruleId":"172","severity":1,"message":"181","line":27,"column":10,"nodeType":"174","messageId":"175","endLine":27,"endColumn":16},{"ruleId":"168","replacedBy":"182"},{"ruleId":"170","replacedBy":"183"},{"ruleId":"168","replacedBy":"184"},{"ruleId":"170","replacedBy":"185"},{"ruleId":"168","replacedBy":"186"},{"ruleId":"170","replacedBy":"187"},{"ruleId":"172","severity":1,"message":"188","line":3,"column":10,"nodeType":"174","messageId":"175","endLine":3,"endColumn":19},{"ruleId":"172","severity":1,"message":"189","line":4,"column":10,"nodeType":"174","messageId":"175","endLine":4,"endColumn":20},{"ruleId":"172","severity":1,"message":"190","line":22,"column":16,"nodeType":"174","messageId":"175","endLine":22,"endColumn":23},{"ruleId":"172","severity":1,"message":"191","line":23,"column":10,"nodeType":"174","messageId":"175","endLine":23,"endColumn":17},{"ruleId":"172","severity":1,"message":"192","line":27,"column":18,"nodeType":"174","messageId":"175","endLine":27,"endColumn":27},{"ruleId":"172","severity":1,"message":"176","line":29,"column":16,"nodeType":"174","messageId":"175","endLine":29,"endColumn":23},{"ruleId":"193","severity":1,"message":"194","line":110,"column":6,"nodeType":"195","endLine":110,"endColumn":44,"suggestions":"196"},{"ruleId":"168","replacedBy":"197"},{"ruleId":"170","replacedBy":"198"},{"ruleId":"172","severity":1,"message":"199","line":6,"column":8,"nodeType":"174","messageId":"175","endLine":6,"endColumn":24},{"ruleId":"172","severity":1,"message":"200","line":7,"column":8,"nodeType":"174","messageId":"175","endLine":7,"endColumn":16},{"ruleId":"172","severity":1,"message":"190","line":22,"column":16,"nodeType":"174","messageId":"175","endLine":22,"endColumn":23},{"ruleId":"172","severity":1,"message":"191","line":23,"column":10,"nodeType":"174","messageId":"175","endLine":23,"endColumn":17},{"ruleId":"168","replacedBy":"201"},{"ruleId":"170","replacedBy":"202"},{"ruleId":"172","severity":1,"message":"203","line":5,"column":20,"nodeType":"174","messageId":"175","endLine":5,"endColumn":30},"no-native-reassign",["204"],"no-negated-in-lhs",["205"],"@typescript-eslint/no-unused-vars","'Chessboard' is defined but never used.","Identifier","unusedVar","'setAuth' is assigned a value but never used.","'PrimarySearchAppBar' is defined but never used.",["204"],["205"],"'Link' is defined but never used.","'Button' is defined but never used.",["204"],["205"],["204"],["205"],["204"],["205"],"'createRef' is defined but never used.","'useHistory' is defined but never used.","'setGame' is assigned a value but never used.","'history' is assigned a value but never used.","'setSocket' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'auth?.jwt'. Either include it or remove the dependency array.","ArrayExpression",["206"],["204"],["205"],"'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.",["204"],["205"],"'FollowInfo' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"207","fix":"208"},"Update the dependencies array to be: [auth?.jwt, game, handleDrop, id, search, socket]",{"range":"209","text":"210"},[3672,3710],"[auth?.jwt, game, handleDrop, id, search, socket]"]